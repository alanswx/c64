		CASE OBJ		MACHINE MC68020		FORWARD	LONG				INCLUDE 'Traps.a'		INCLUDE 'EmulatorDefs.a'ASMCPU	PROC		IMPORT		READTable:CODE		IMPORT		WRITETable:CODE			MOVEM.L		D3-D7/A2-A4,-(SP)					; save non-volatile registers		MOVEA.L		gPCRegister(A5),PRGCNTR				; load local copy of Program Counter register		MOVE.L		gSTACKRegister(A5),SR_STACK			; load local copy of Stack register		ORI.W		#$0100,SR_STACK						; add stack *offset* to local copy		SWAP		SR_STACK							; swap out stack, swap in status		MOVE.L		gSRRegister(A5),D0					; load local copy of Status register		MOVE.B		(SREncodeTable,PC,D0.L),SR_STACK	; encode and combine Stack and Status register		MOVE.L		gACCRegister(A5),ACC				; load local copy of Accumulator register		MOVE.L		gINYRegister(A5),INY				; load local copy of Index Y register		MOVE.L		gINXRegister(A5),INX				; load local copy of Index X registerSTART:	PREFETCH		DISPATCHDOINTERRUPTCHECK		JSR			InterruptCheck		TST.L		D0		BNE.S		EXIT		PREFETCH		DISPATCH		EXIT:	MOVE.L		INX,gINXRegister(A5)				; store local copy of Index X register		MOVE.L		INY,gINYRegister(A5)				; store local copy of Index Y register		MOVE.L		ACC,gACCRegister(A5)				; store local copy of Accumulator register		CLR.L		D0									; make sure entire register is zeroed		MOVE.B		SR_STACK,D0							; extrack Status register		MOVE.B		(SRDecodeTable,PC,D0.L),D0			; decode Status register		MOVE.L		D0,gSRRegister(A5)					; store local copy of Status register		CLR.W		SR_STACK							; make sure low word of register is zeroed		SWAP		SR_STACK							; swap out status, swap in stack		ANDI.W		#$00FF,SR_STACK						; remove stack *offset* from local copy		MOVE.L		SR_STACK,gSTACKRegister(A5)			; store local copy of Stack register		MOVE.L		PRGCNTR,gPCRegister(A5)				; store local copy of Program Counter register		MOVEM.L		(SP)+,D3-D7/A2-A4					; save non-volatile registers		RTS		UNIMPLEMENTED:		MOVE.L		PRGCNTR,D1							; get our play copy		MOVEQ		#12,D0								; setup for nybble shift		LSR.W		D0,D1								; shift high nybble into low nybble		MOVE.L		(READTable,D1.L*4),D1				; magically get base address into D1		MOVE.B		(PRGCNTR,D1.L),PREFETCH_DATA		; fetch byte				PEA		@BADOPSTRING		_DebugStr		_ExitToShell@BADOPSTRING	DC.B	'Unimplemented opcode:;RD3.b&FF';;	$ 00  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNOPTABLEBASE:ASMCPUOP0x00:		BRA.W		UNIMPLEMENTED;;	$ 01  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x01:		BRA.W		UNIMPLEMENTED;;	$02  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x02:		BRA.W		UNIMPLEMENTED;;	$03  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x03:		BRA.W		UNIMPLEMENTED;;	$04  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x04:		BRA.W		UNIMPLEMENTED;;	$05  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x05:		BRA.W		UNIMPLEMENTED;;	$06  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x06:		BRA.W		UNIMPLEMENTED;;	$07  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x07:		BRA.W		UNIMPLEMENTED;;	$08  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x08:		BRA.W		UNIMPLEMENTED;;	$09 ORA - OR Accumulator with Memory;	Addressing mode:	immediate;	Flags affected:		n, z;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0x09:		LOAD_IMM										; fetch byte via immediate addressing mode		ORACC		PREFETCH_DATA						; OR byte with Accumulator register		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$0A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x0A:		BRA.W		UNIMPLEMENTED;;	$0B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x0B:		BRA.W		UNIMPLEMENTED;;	$0C  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x0C:		BRA.W		UNIMPLEMENTED;;	$0D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x0D:		BRA.W		UNIMPLEMENTED;;	$0E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x0E:		BRA.W		UNIMPLEMENTED;;	$0F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x0F:		BRA.W		UNIMPLEMENTED;;	$10 BPL - Branch If Plus;	Addressing mode:	relative;	Flags affected:		none;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0x10:		BTST		#POSN,SR_STACK						; test negative bit in Status register		BNE.S		@1									; skip offset prefetch if branch not taken		CLR.W		PREFETCH_DATA						; zero (soon to be) high word of prefetch data		ROL.L		#$08,PREFETCH_DATA					; get immediate data byte		EXTB.L		PREFETCH_DATA						; sign extend PC offset		ADDA.L		PREFETCH_DATA,PRGCNTR				; add branch offset to PC@1		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$11  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x11:		BRA.W		UNIMPLEMENTED;;	$12  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x12:		BRA.W		UNIMPLEMENTED;;	$13  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x13:		BRA.W		UNIMPLEMENTED;;	$14  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x14:		BRA.W		UNIMPLEMENTED;;	$15  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x15:		BRA.W		UNIMPLEMENTED;;	$16  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x16:		BRA.W		UNIMPLEMENTED;;	$17  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x17:		BRA.W		UNIMPLEMENTED;;	$18  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x18:		BRA.W		UNIMPLEMENTED;;	$19  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x19:		BRA.W		UNIMPLEMENTED;;	$1A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x1A:		BRA.W		UNIMPLEMENTED;;	$1B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x1B:		BRA.W		UNIMPLEMENTED;;	$1C  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x1C:		BRA.W		UNIMPLEMENTED;;	$1D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x1D:		BRA.W		UNIMPLEMENTED;;	$1E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x1E:		BRA.W		UNIMPLEMENTED;;	$1F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x1F:		BRA.W		UNIMPLEMENTED;;	$20 JSR - Jump to Subroutine;	Addressing mode:	absolute;	Flags affected:		none;	Bytes/Cycles		3/6;		ALIGN INSTRALIGNASMCPUOP0x20:		CLR.W		PREFETCH_DATA						; zero (soon to be) high word of prefetch data		SWAP		PREFETCH_DATA						; get absolute data word		ROL.W		#$08,PREFETCH_DATA					; swap byte ordering for big endies		INCPC		2									; increment the Program Counter		MOVE.L		PRGCNTR,D0							; get copy of Program Counter for store		ROL.W		#$08,D0								; swap byte ordering for little endies		SWAP		SR_STACK							; swap out status, swap in stack		SUBQ.B		#$02,SR_STACK						; adjust Stack register		MOVEA.L		gRAMBlock,A0						; load base address of RAM		MOVE.W		D0,$01(A0,SR_STACK.W)				; push word onto stack		SWAP		SR_STACK							; swap out stack, swap in status		MOVEA.L		PREFETCH_DATA,PRGCNTR				; load Program Counter register		FINISH		6									; finish instruction and dispatch next;;	$21  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x21:		BRA.W		UNIMPLEMENTED;;	$22  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x22:		BRA.W		UNIMPLEMENTED;;	$23  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x23:		BRA.W		UNIMPLEMENTED;;	$24  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x24:		BRA.W		UNIMPLEMENTED;;	$25  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x25:		BRA.W		UNIMPLEMENTED;;	$26  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x26:		BRA.W		UNIMPLEMENTED;;	$27  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x27:		BRA.W		UNIMPLEMENTED;;	$28  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x28:		BRA.W		UNIMPLEMENTED;;	$29 AND - And Accumulator with Memory;	Addressing mode:	immediate;	Flags affected:		n, z;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0x29:		LOAD_IMM										; fetch byte via immediate addressing mode		ANDACC		PREFETCH_DATA						; AND byte with Accumulator register		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$2A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x2A:		BRA.W		UNIMPLEMENTED;;	$2B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x2B:		BRA.W		UNIMPLEMENTED;;	$2C  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x2C:		BRA.W		UNIMPLEMENTED;;	$2D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x2D:		BRA.W		UNIMPLEMENTED;;	$2E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x2E:		BRA.W		UNIMPLEMENTED;;	$2F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x2F:		BRA.W		UNIMPLEMENTED;;	$30 BMI - Branch If Minus;	Addressing mode:	relative;	Flags affected:		none;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0x30:		BTST		#POSN,SR_STACK						; test negative bit in Status register		BEQ.S		@1									; skip offset prefetch if branch not taken		CLR.W		PREFETCH_DATA						; zero (soon to be) high word of prefetch data		ROL.L		#$08,PREFETCH_DATA					; get immediate data byte		EXTB.L		PREFETCH_DATA						; sign extend PC offset		ADDA.L		PREFETCH_DATA,PRGCNTR				; add branch offset to PC@1		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$31  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x31:		BRA.W		UNIMPLEMENTED;;	$32  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x32:		BRA.W		UNIMPLEMENTED;;	$33  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x33:		BRA.W		UNIMPLEMENTED;;	$34  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x34:		BRA.W		UNIMPLEMENTED;;	$35  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x35:		BRA.W		UNIMPLEMENTED;;	$36  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x36:		BRA.W		UNIMPLEMENTED;;	$37  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x37:		BRA.W		UNIMPLEMENTED;;	$38  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x38:		BRA.W		UNIMPLEMENTED;;	$39  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x39:		BRA.W		UNIMPLEMENTED;;	$3A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x3A:		BRA.W		UNIMPLEMENTED;;	$3B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x3B:		BRA.W		UNIMPLEMENTED;;	$3C  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x3C:		BRA.W		UNIMPLEMENTED;;	$3D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x3D:		BRA.W		UNIMPLEMENTED;;	$3E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x3E:		BRA.W		UNIMPLEMENTED;;	$3F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x3F:		BRA.W		UNIMPLEMENTED;;	$40  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x40:		BRA.W		UNIMPLEMENTED;;	$41  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x41:		BRA.W		UNIMPLEMENTED;;	$42  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x42:		BRA.W		UNIMPLEMENTED;;	$43  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x43:		BRA.W		UNIMPLEMENTED;;	$44  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x44:		BRA.W		UNIMPLEMENTED;;	$45  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x45:		BRA.W		UNIMPLEMENTED;;	$46  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x46:		BRA.W		UNIMPLEMENTED;;	$47  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x47:		BRA.W		UNIMPLEMENTED;;	$48  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x48:		BRA.W		UNIMPLEMENTED;;	$49  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x49:		BRA.W		UNIMPLEMENTED;;	$4A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x4A:		BRA.W		UNIMPLEMENTED;;	$4B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x4B:		BRA.W		UNIMPLEMENTED;;	$4C JMP - Jump;	Addressing mode:	absolute;	Flags affected:		none;	Bytes/Cycles		3/3;		ALIGN INSTRALIGNASMCPUOP0x4C:		CLR.W		PREFETCH_DATA						; zero (soon to be) high word of prefetch data		SWAP		PREFETCH_DATA						; get absolute data word		ROL.W		#$08,PREFETCH_DATA					; swap byte ordering for big endies		MOVEA.L		PREFETCH_DATA,PRGCNTR				; load Program Counter register		FINISH		3									; finish instruction and dispatch next;;	$4D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x4D:		BRA.W		UNIMPLEMENTED;;	$4E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x4E:		BRA.W		UNIMPLEMENTED;;	$4F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x4F:		BRA.W		UNIMPLEMENTED;;	$50  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x50:		BRA.W		UNIMPLEMENTED;;	$51  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x51:		BRA.W		UNIMPLEMENTED;;	$52  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x52:		BRA.W		UNIMPLEMENTED;;	$53  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x53:		BRA.W		UNIMPLEMENTED;;	$54  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x54:		BRA.W		UNIMPLEMENTED;;	$55  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x55:		BRA.W		UNIMPLEMENTED;;	$56  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x56:		BRA.W		UNIMPLEMENTED;;	$57  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x57:		BRA.W		UNIMPLEMENTED;;	$58 CLI - Clear Interrupt Disable Flag;	Addressing mode:	implied;	Flags affected:		i;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0x58:		ANDI.B		#$FF-BITI,SR_STACK					; clear interrupt disable		INCPC		1									; increment the Program Counter		JSR			CheckForLatchedInterrupts			; check for blocked interrupts		FINISH		2									; finish instruction and dispatch next;;	$59  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x59:		BRA.W		UNIMPLEMENTED;;	$5A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x5A:		BRA.W		UNIMPLEMENTED;;	$5B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x5B:		BRA.W		UNIMPLEMENTED;;	$5C  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x5C:		BRA.W		UNIMPLEMENTED;;	$5D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x5D:		BRA.W		UNIMPLEMENTED;;	$5E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x5E:		BRA.W		UNIMPLEMENTED;;	$5F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x5F:		BRA.W		UNIMPLEMENTED;;	$60 RTS - Return from Subroutine;	Addressing mode:	implied;	Flags affected:		none;	Bytes/Cycles		1/6;		ALIGN INSTRALIGNASMCPUOP0x60:		SWAP		SR_STACK							; swap out status, swap in stack		MOVEA.L		gRAMBlock,A0						; load base address of RAM		MOVE.W		$01(A0,SR_STACK.W),D0				; pop word off stack and increment		ADDQ.B		#$02,SR_STACK						; adjust Stack register		SWAP		SR_STACK							; swap out stack, swap in status		ROL.W		#$08,D0								; swap byte ordering for big endies		MOVEQ		#$01,D1								; preload 1 for PC increment		ADD.W		D0,D1								; add one to PC		MOVEA.L		D1,PRGCNTR							; load Program Counter register		FINISH		6									; finish instruction and dispatch next;;	$61  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x61:		BRA.W		UNIMPLEMENTED;;	$62  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x62:		BRA.W		UNIMPLEMENTED;;	$63  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x63:		BRA.W		UNIMPLEMENTED;;	$64  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x64:		BRA.W		UNIMPLEMENTED;;	$65  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x65:		BRA.W		UNIMPLEMENTED;;	$66  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x66:		BRA.W		UNIMPLEMENTED;;	$67  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x67:		BRA.W		UNIMPLEMENTED;;	$68  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x68:		BRA.W		UNIMPLEMENTED;;	$69  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x69:		BRA.W		UNIMPLEMENTED;;	$6A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x6A:		BRA.W		UNIMPLEMENTED;;	$6B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x6B:		BRA.W		UNIMPLEMENTED;;	$6C JMP - Jump;	Addressing mode:	absolute indirect;	Flags affected:		none;	Bytes/Cycles		3/5;		ALIGN INSTRALIGNASMCPUOP0x6C:		CLR.W		PREFETCH_DATA						; zero (soon to be) high word of prefetch data		SWAP		PREFETCH_DATA						; get absolute data word		ROL.W		#$08,PREFETCH_DATA					; swap byte ordering for big endies		MOVE.L		PREFETCH_DATA,D1					; get our play copy		MOVEQ		#12,D0								; setup for nybble shift		LSR.W		D0,D1								; shift high nybble into low nybble		MOVE.L		(READTable,D1.L*4),A0				; magically get base address into A0		MOVE.W		(A0,PREFETCH_DATA.L),D0				; fetch word		ROL.W		#$08,D0								; swap byte ordering for big endies		MOVEA.L		D0,PRGCNTR							; load Program Counter register		FINISH		5									; finish instruction and dispatch next;;	$6D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x6D:		BRA.W		UNIMPLEMENTED;;	$6E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x6E:		BRA.W		UNIMPLEMENTED;;	$6F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x6F:		BRA.W		UNIMPLEMENTED;;	$70  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x70:		BRA.W		UNIMPLEMENTED;;	$71  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x71:		BRA.W		UNIMPLEMENTED;;	$72  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x72:		BRA.W		UNIMPLEMENTED;;	$73  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x73:		BRA.W		UNIMPLEMENTED;;	$74  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x74:		BRA.W		UNIMPLEMENTED;;	$75  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x75:		BRA.W		UNIMPLEMENTED;;	$76  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x76:		BRA.W		UNIMPLEMENTED;;	$77  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x77:		BRA.W		UNIMPLEMENTED;;	$78 SEI - Set Interrupt Disable Flag;	Addressing mode:	implied;	Flags affected:		i;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0x78:		ORI.B		#BITI,SR_STACK						; set interrupt disable		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$79  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x79:		BRA.W		UNIMPLEMENTED;;	$7A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x7A:		BRA.W		UNIMPLEMENTED;;	$7B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x7B:		BRA.W		UNIMPLEMENTED;;	$7C  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x7C:		BRA.W		UNIMPLEMENTED;;	$7D  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x7D:		BRA.W		UNIMPLEMENTED;;	$7E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x7E:		BRA.W		UNIMPLEMENTED;;	$7F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x7F:		BRA.W		UNIMPLEMENTED;;	$80  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x80:		BRA.W		UNIMPLEMENTED;;	$81  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x81:		BRA.W		UNIMPLEMENTED;;	$82  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x82:		BRA.W		UNIMPLEMENTED;;	$83  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x83:		BRA.W		UNIMPLEMENTED;;	$84 STY - Store Index Register Y to Memory;	Addressing mode:	zero page;	Flags affected:		none;	Bytes/Cycles		2/3;		ALIGN INSTRALIGNASMCPUOP0x84:		STORE_ZP	INY									; store Index Y register		INCPC		2									; increment the Program Counter		FINISH		3									; finish instruction and dispatch next;;	$85 STA - Store Accumulator to Memory;	Addressing mode:	zero page;	Flags affected:		none;	Bytes/Cycles		2/3;		ALIGN INSTRALIGNASMCPUOP0x85:		STORE_ZP	ACC									; store Accumulator register		INCPC		2									; increment the Program Counter		FINISH		3									; finish instruction and dispatch next;;	$86 STX - Store Index Register X to Memory;	Addressing mode:	zero page;	Flags affected:		none;	Bytes/Cycles		2/3;		ALIGN INSTRALIGNASMCPUOP0x86:		STORE_ZP	INX									; store Index X register		INCPC		2									; increment the Program Counter		FINISH		3									; finish instruction and dispatch next;;	$87  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x87:		BRA.W		UNIMPLEMENTED;;	$88 DEY - Decrement Index Register Y;	Addressing mode:	implied;	Flags affected:		n, z;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0x88:		SUBQ.B		#$01,INY							; subtract 1 from Index Y register		ASETNZ											; set condition codes		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$89  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x89:		BRA.W		UNIMPLEMENTED;;	$8A  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x8A:		BRA.W		UNIMPLEMENTED;;	$8B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x8B:		BRA.W		UNIMPLEMENTED;;	$8C STY - Store Index Register Y to Memory;	Addressing mode:	absolute;	Flags affected:		none;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0x8C:		STORE_ABS	INY									; store Index Y register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$8D STA - Store Accumulator to Memory;	Addressing mode:	absolute;	Flags affected:		none;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0x8D:		STORE_ABS	ACC									; store Accumulator register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$8E STX - Store Index Register X to Memory;	Addressing mode:	absolute;	Flags affected:		none;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0x8E:		STORE_ABS	INX									; store Index X register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$8F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x8F:		BRA.W		UNIMPLEMENTED;;	$90  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x90:		BRA.W		UNIMPLEMENTED;;	$91  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x91:		BRA.W		UNIMPLEMENTED;;	$92  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x92:		BRA.W		UNIMPLEMENTED;;	$93  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x93:		BRA.W		UNIMPLEMENTED;;	$94  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x94:		BRA.W		UNIMPLEMENTED;;	$95  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x95:		BRA.W		UNIMPLEMENTED;;	$96  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x96:		BRA.W		UNIMPLEMENTED;;	$97  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x97:		BRA.W		UNIMPLEMENTED;;	$98  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x98:		BRA.W		UNIMPLEMENTED;;	$99 STA - Store Accumulator to Memory;	Addressing mode:	absolute indexed, Y;	Flags affected:		none;	Bytes/Cycles		3/5;		ALIGN INSTRALIGNASMCPUOP0x99:		STORE_ABSY	ACC									; store Accumulator register		INCPC		3									; increment the Program Counter		FINISH		5									; finish instruction and dispatch next;;	$9A TXS - Transfer Index Register X to Stack Pointer;	Addressing mode:	implied;	Flags affected:		none;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0x9A:		SWAP		SR_STACK							; swap out status, swap in stack		MOVE.B		INX,SR_STACK						; load Stack register		SWAP		SR_STACK							; swap out stack, swap in status		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$9B  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x9B:		BRA.W		UNIMPLEMENTED;;	$9C  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x9C:		BRA.W		UNIMPLEMENTED;;	$9D STA - Store Accumulator to Memory;	Addressing mode:	absolute indexed, X;	Flags affected:		none;	Bytes/Cycles		3/5;		ALIGN INSTRALIGNASMCPUOP0x9D:		STORE_ABSX	ACC									; store Accumulator register		INCPC		3									; increment the Program Counter		FINISH		5									; finish instruction and dispatch next;;	$9E  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x9E:		BRA.W		UNIMPLEMENTED;;	$9F  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0x9F:		BRA.W		UNIMPLEMENTED;;	$A0 LDY - Load Index Register Y from Memory;	Addressing mode:	immediate;	Flags affected:		n, z;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0xA0:		LOAD_IMM										; fetch byte via immediate addressing mode		LOADINY		PREFETCH_DATA						; load Index Y register		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$A1  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xA1:		BRA.W		UNIMPLEMENTED;;	$A2 LDX - Load Index Register X from Memory;	Addressing mode:	immediate;	Flags affected:		n, z;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0xA2:		LOAD_IMM										; fetch byte via immediate addressing mode		LOADINX		PREFETCH_DATA						; load Index X register		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$A3  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xA3:		BRA.W		UNIMPLEMENTED;;	$A4  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xA4:		BRA.W		UNIMPLEMENTED;;	$A5  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xA5:		BRA.W		UNIMPLEMENTED;;	$A6  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xA6:		BRA.W		UNIMPLEMENTED;;	$A7  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xA7:		BRA.W		UNIMPLEMENTED;;	$A8 TAY - Transfer Accumulator to Index Register Y;	Addressing mode:	implied;	Flags affected:		n, z;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0xA8:		LOADINY		ACC									; load Index Y register		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$A9 LDA - Load Accumulator from Memory;	Addressing mode:	immediate;	Flags affected:		n, z;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0xA9:		LOAD_IMM										; fetch byte via immediate addressing mode		LOADACC		PREFETCH_DATA						; load Accumulator register		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$AA TAX - Transfer Accumulator to Index Register X;	Addressing mode:	implied;	Flags affected:		n, z;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0xAA:		LOADINX		ACC									; load Index X register		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$AB  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xAB:		BRA.W		UNIMPLEMENTED;;	$AC LDY - Load Index Y register from Memory;	Addressing mode:	absolute;	Flags affected:		n, z;	Bytes/Cycles		3/4	;		ALIGN INSTRALIGNASMCPUOP0xAC:		LOAD_ABS										; fetch byte via absolute addressing mode		LOADINY		D0									; load Index Y register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$AD LDA - Load Accumulator from Memory;	Addressing mode:	absolute;	Flags affected:		n, z;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0xAD:		LOAD_ABS										; fetch byte via absolute addressing mode		LOADACC		D0									; load Accumulator register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$AE LDX - Load Index X register from Memory;	Addressing mode:	absolute;	Flags affected:		n, z;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0xAE:		LOAD_ABS										; fetch byte via absolute addressing mode		LOADINX		D0									; load Index X register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$AF  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xAF:		BRA.W		UNIMPLEMENTED;;	$B0  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB0:		BRA.W		UNIMPLEMENTED;;	$B1  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB1:		BRA.W		UNIMPLEMENTED;;	$B2  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB2:		BRA.W		UNIMPLEMENTED;;	$B3  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB3:		BRA.W		UNIMPLEMENTED;;	$B4  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB4:		BRA.W		UNIMPLEMENTED;;	$B5  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB5:		BRA.W		UNIMPLEMENTED;;	$B6  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB6:		BRA.W		UNIMPLEMENTED;;	$B7  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB7:		BRA.W		UNIMPLEMENTED;;	$B8  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB8:		BRA.W		UNIMPLEMENTED;;	$B9  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xB9:		BRA.W		UNIMPLEMENTED;;	$BA  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xBA:		BRA.W		UNIMPLEMENTED;;	$BB  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xBB:		BRA.W		UNIMPLEMENTED;;	$BC  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xBC:		BRA.W		UNIMPLEMENTED;;	$BD  LDA - Load Accumulator from Memory;	Addressing mode:	absolute indexed, X;	Flags affected:		n, z;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0xBD:		LOAD_ABSX										; fetch byte via absolute indexed X addressing mode		LOADACC		D0									; load Accumulator register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$BE  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xBE:		BRA.W		UNIMPLEMENTED;;	$BF  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xBF:		BRA.W		UNIMPLEMENTED;;	$C0  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC0:		BRA.W		UNIMPLEMENTED;;	$C1  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC1:		BRA.W		UNIMPLEMENTED;;	$C2  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC2:		BRA.W		UNIMPLEMENTED;;	$C3  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC3:		BRA.W		UNIMPLEMENTED;;	$C4  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC4:		BRA.W		UNIMPLEMENTED;;	$C5  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC5:		BRA.W		UNIMPLEMENTED;;	$C6  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC6:		BRA.W		UNIMPLEMENTED;;	$C7  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC7:		BRA.W		UNIMPLEMENTED;;	$C8 INY - Increment Index Register Y;	Addressing mode:	implied;	Flags affected:		n, z;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0xC8:		ADDQ.B		#$01,INY							; add 1 to Index Y register		ASETNZ											; set condition codes		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$C9  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xC9:		BRA.W		UNIMPLEMENTED;;	$CA DEX - Decrement Index Register X;	Addressing mode:	implied;	Flags affected:		n, z;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0xCA:		SUBQ.B		#$01,INX							; subtract 1 from Index X register		ASETNZ											; set condition codes		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$CB  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xCB:		BRA.W		UNIMPLEMENTED;;	$CC  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xCC:		BRA.W		UNIMPLEMENTED;;	$CD CMP - Compare Accumulator with Memory;	Addressing mode:	absolute;	Flags affected:		n, z, c;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0xCD:		LOAD_ABS										; fetch byte via absolute addressing mode		COMPARE		ACC									; compare with Accumulator register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$CE  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xCE:		BRA.W		UNIMPLEMENTED;;	$CF  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xCF:		BRA.W		UNIMPLEMENTED;;	$D0 BNE - Branch If Not Equal;	Addressing mode:	relative;	Flags affected:		none;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0xD0:		_Debugger		BTST		#POSZ,SR_STACK						; test zero bit in Status register		BNE.S		@1									; skip offset prefetch if branch not taken		CLR.W		PREFETCH_DATA						; zero (soon to be) high word of prefetch data		ROL.L		#$08,PREFETCH_DATA					; get immediate data byte		EXTB.L		PREFETCH_DATA						; sign extend PC offset		ADDA.L		PREFETCH_DATA,PRGCNTR				; add branch offset to PC@1		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$D1  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xD1:		BRA.W		UNIMPLEMENTED;;	$D2  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xD2:		BRA.W		UNIMPLEMENTED;;	$D3  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xD3:		BRA.W		UNIMPLEMENTED;;	$D4  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xD4:		BRA.W		UNIMPLEMENTED;;	$D5  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xD5:		BRA.W		UNIMPLEMENTED;;	$D6  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xD6:		BRA.W		UNIMPLEMENTED;;	$D7  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xD7:		BRA.W		UNIMPLEMENTED;;	$D8 CLD - Clear Decimal Mode Flag;	Addressing mode:	implied;	Flags affected:		d;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0xD8:		ANDI.B		#$FF-BITD,SR_STACK					; clear decimal mode		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$D9 CMP - Compare Accumulator with Memory;	Addressing mode:	absolute indexed, Y;	Flags affected:		n, z, c;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0xD9:		LOAD_ABSY										; fetch byte via absolute indexed Y addressing mode		COMPARE		ACC									; compare with Accumulator register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$DA  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xDA:		BRA.W		UNIMPLEMENTED;;	$DB  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xDB:		BRA.W		UNIMPLEMENTED;;	$DC  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xDC:		BRA.W		UNIMPLEMENTED;;	$DD CMP - Compare Accumulator with Memory;	Addressing mode:	absolute indexed, X;	Flags affected:		n, z, c;	Bytes/Cycles		3/4;		ALIGN INSTRALIGNASMCPUOP0xDD:		LOAD_ABSX										; fetch byte via absolute indexed X addressing mode		COMPARE		ACC									; compare with Accumulator register		INCPC		3									; increment the Program Counter		FINISH		4									; finish instruction and dispatch next;;	$DE  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xDE:		BRA.W		UNIMPLEMENTED;;	$DF  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xDF:		BRA.W		UNIMPLEMENTED;;	$E0  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE0:		BRA.W		UNIMPLEMENTED;;	$E1  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE1:		BRA.W		UNIMPLEMENTED;;	$E2  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE2:		BRA.W		UNIMPLEMENTED;;	$E3  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE3:		BRA.W		UNIMPLEMENTED;;	$E4  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE4:		BRA.W		UNIMPLEMENTED;;	$E5  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE5:		BRA.W		UNIMPLEMENTED;;	$E6  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE6:		BRA.W		UNIMPLEMENTED;;	$E7  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE7:		BRA.W		UNIMPLEMENTED;;	$E8 INX - Increment Index Register X;	Addressing mode:	implied;	Flags affected:		n, z;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0xE8:		ADDQ.B		#$01,INX							; add 1 to Index X register		ASETNZ											; set condition codes		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$E9  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xE9:		BRA.W		UNIMPLEMENTED;;	$EA  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xEA:		BRA.W		UNIMPLEMENTED;;	$EB  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xEB:		BRA.W		UNIMPLEMENTED;;	$EC  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xEC:		BRA.W		UNIMPLEMENTED;;	$ED  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xED:		BRA.W		UNIMPLEMENTED;;	$EE  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xEE:		BRA.W		UNIMPLEMENTED;;	$EF  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xEF:		BRA.W		UNIMPLEMENTED;;	$F0 BEQ - Branch If Equal;	Addressing mode:	relative;	Flags affected:		none;	Bytes/Cycles		2/2;		ALIGN INSTRALIGNASMCPUOP0xF0:		BTST		#POSZ,SR_STACK						; test zero bit in Status register		BEQ.S		@1									; skip offset prefetch if branch not taken		CLR.W		PREFETCH_DATA						; zero (soon to be) high word of prefetch data		ROL.L		#$08,PREFETCH_DATA					; get immediate data byte		EXTB.L		PREFETCH_DATA						; sign extend PC offset		ADDA.L		PREFETCH_DATA,PRGCNTR				; add branch offset to PC@1		INCPC		2									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$F1  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF1:		BRA.W		UNIMPLEMENTED;;	$F2  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF2:		BRA.W		UNIMPLEMENTED;;	$F3  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF3:		BRA.W		UNIMPLEMENTED;;	$F4  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF4:		BRA.W		UNIMPLEMENTED;;	$F5  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF5:		BRA.W		UNIMPLEMENTED;;	$F6  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF6:		BRA.W		UNIMPLEMENTED;;	$F7  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF7:		BRA.W		UNIMPLEMENTED;;	$F8 SED - Set Decimal Mode Flag;	Addressing mode:	implied;	Flags affected:		d;	Bytes/Cycles		1/2;		ALIGN INSTRALIGNASMCPUOP0xF8:		ORI.B		#BITD,SR_STACK						; set decimal mode		INCPC		1									; increment the Program Counter		FINISH		2									; finish instruction and dispatch next;;	$F9  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xF9:		BRA.W		UNIMPLEMENTED;;	$FA  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xFA:		BRA.W		UNIMPLEMENTED;;	$FB  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xFB:		BRA.W		UNIMPLEMENTED;;	$FC  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xFC:		BRA.W		UNIMPLEMENTED;;	$FD  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xFD:		BRA.W		UNIMPLEMENTED;;	$FE  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xFE:		BRA.W		UNIMPLEMENTED;;	$FF  - ;	Addressing mode:	;	Flags affected:		;	Bytes/Cycles		;		ALIGN INSTRALIGNASMCPUOP0xFF:		BRA.W		UNIMPLEMENTED				INCLUDE 'SRDecodes.a'		ENDPROC		END